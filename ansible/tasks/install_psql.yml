# Install PostgreSQL from CentOS base repositories

- name: Install PostgreSQL server and client
  shell: yum install -y postgresql-server postgresql postgresql-contrib
  register: postgres_install
  changed_when: "'Nothing to do' not in postgres_install.stdout"

- name: Install Python PostgreSQL packages
  shell: yum install -y python3-psycopg2
  register: python_postgres
  changed_when: "'Nothing to do' not in python_postgres.stdout"
  ignore_errors: yes

- name: Check if PostgreSQL is already initialized
  stat:
    path: /var/lib/pgsql/data/postgresql.conf
  register: postgres_initialized

- name: Initialize PostgreSQL database
  shell: postgresql-setup initdb
  register: postgres_init
  changed_when: true
  when: not postgres_initialized.stat.exists

- name: Start and enable PostgreSQL service
  shell: |
    systemctl start postgresql
    systemctl enable postgresql
  register: postgres_service
  changed_when: true

- name: Configure PostgreSQL authentication (allow connections)
  shell: |
    cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.backup
    cat > /var/lib/pgsql/data/pg_hba.conf << 'EOF'
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    local   all             all                                     trust
    host    all             all             127.0.0.1/32            md5
    host    all             all             ::1/128                 md5
    host    all             all             192.168.10.13/32          md5
    host    all             all             0.0.0.0/0               md5
    EOF
  register: postgres_auth
  changed_when: true

- name: Configure PostgreSQL to listen on all addresses
  shell: |
    cp /var/lib/pgsql/data/postgresql.conf /var/lib/pgsql/data/postgresql.conf.backup
    
    # Update listen addresses
    sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" /var/lib/pgsql/data/postgresql.conf
    sed -i "s/#port = 5432/port = 5432/" /var/lib/pgsql/data/postgresql.conf
    
    # Update logging
    sed -i "s/#log_destination = 'stderr'/log_destination = 'stderr'/" /var/lib/pgsql/data/postgresql.conf
    sed -i "s/#logging_collector = off/logging_collector = on/" /var/lib/pgsql/data/postgresql.conf
    
    # Basic performance settings for small system
    sed -i "s/#shared_buffers = 128MB/shared_buffers = 128MB/" /var/lib/pgsql/data/postgresql.conf
    sed -i "s/#effective_cache_size = 4GB/effective_cache_size = 512MB/" /var/lib/pgsql/data/postgresql.conf

  register: postgres_config
  changed_when: true

- name: Configure firewall for PostgreSQL
  shell: |
    if systemctl is-active --quiet firewalld; then
      firewall-cmd --permanent --add-port=5432/tcp
      firewall-cmd --reload
      echo "Firewall configured"
    else
      echo "Firewalld not running"
    fi
  register: firewall_config
  changed_when: "'Firewall configured' in firewall_config.stdout"

- name: Restart PostgreSQL to apply configuration
  shell: |
    systemctl restart postgresql
    echo "PostgreSQL restarted successfully"
  register: postgres_restart
  changed_when: true

- name: Set PostgreSQL postgres user password (only if service is running)
  shell: |
    if systemctl is-active postgresql >/dev/null 2>&1; then
      sudo -u postgres psql -c "ALTER USER postgres PASSWORD '{{ postgres_root_password }}';"
      echo "Password set successfully"
    else
      echo "PostgreSQL service not running, cannot set password"
      exit 1
    fi
  register: postgres_password_set
  changed_when: "'Password set successfully' in postgres_password_set.stdout"

- name: Verify PostgreSQL installation
  shell: |
    sudo -u postgres psql -c "SELECT version();"
  register: postgres_verification
  changed_when: false