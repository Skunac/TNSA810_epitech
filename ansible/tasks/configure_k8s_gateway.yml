- name: Check gateway API CRDs
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: gatewayclasses.gateway.networking.k8s.io
  register: gateway_crd_exists
  ignore_errors: true

- name: Install gateway API resource definitions
  shell: kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/experimental-install.yaml
  when: gateway_crd_exists.resources | length == 0

- name: Check node labels
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    name: apigatewayserver
  register: node_info

- name: Add Kong helm repo
  kubernetes.core.helm_repository:
    name: kong
    repo_url: https://charts.konghq.com

- name: Copy gateway configuration files
  ansible.builtin.copy:
    src: "../ressources/k8s/gateway/"
    dest: "/root/.kube/ressources/gateway/"
    mode: '0644'
    backup: yes

- name: Check if Kong release exists
  kubernetes.core.helm_info:
    name: kong
    namespace: kong
  register: kong_release_info
  ignore_errors: true

#- name: Apply all gateway resources from directory
#  shell: kubectl apply -f /root/.kube/ressources/gateway/
#  register: kubectl_apply_result
#  changed_when: "'configured' in kubectl_apply_result.stdout or 'created' in kubectl_apply_result.stdout"
#  failed_when:
#    - kubectl_apply_result.rc != 0
#    - "'no objects passed to apply' not in kubectl_apply_result.stderr"

- name: Install Kong gateway
  kubernetes.core.helm:
    name: kong
    chart_ref: kong/ingress
    namespace: kong
    create_namespace: true
    values_files:
      - /root/.kube/ressources/gateway/helm/kong-current-values.yml
  when: kong_release_info.status is undefined or kong_release_info.status.status != "deployed"
  