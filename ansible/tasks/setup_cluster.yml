- name: Install Flannel CNI plugin
  shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: flannel_install

- name: Wait for nodes to be ready
  shell: kubectl get nodes --no-headers | awk '{print $2}' | grep -v Ready | wc -l
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: nodes_not_ready
  until: nodes_not_ready.stdout == "0"
  retries: 30
  delay: 10
  changed_when: false

- name: Display final node status
  shell: kubectl get nodes -o wide
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: final_nodes
  changed_when: false

- name: Show final cluster status
  debug:
    var: final_nodes.stdout_lines
    
- name: Check if Kubernetes is already initialized
  stat:
    path: /root/.kube/config
  register: k8s_admin_conf

- name: Initialize Kubernetes cluster
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16
  register: kubeadm_init_result
  when: not k8s_admin_conf.stat.exists

- name: Display kubeadm init output
  debug:
    var: kubeadm_init_result.stdout_lines
  when: kubeadm_init_result is defined and kubeadm_init_result.changed

- name: Create .kube directory for root
  file:
    path: /root/.kube
    state: directory
    mode: '0755'
  when: not k8s_admin_conf.stat.exists

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0644'
  when: not k8s_admin_conf.stat.exists

- name: Generate join command
  shell: kubeadm token create --print-join-command
  register: join_command_result
  changed_when: false

- name: Save join command to host machine
  local_action:
    module: copy
    content: "{{ join_command_result.stdout }}"
    dest: "./k8s-join-command.txt"
    mode: '0644'
  become: no
  vars:
    ansible_python_interpreter: /usr/bin/python3